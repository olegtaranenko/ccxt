// ----------------------------------------------------------------------------

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code
// EDIT THE CORRESPONDENT .ts FILE INSTEAD

//  ---------------------------------------------------------------------------
import binance from './binance.js';
//  ---------------------------------------------------------------------------
export default class binancecoinm extends binance {
    describe() {
        return this.deepExtend(super.describe(), {
            'has': {
                'CORS': undefined,
                'spot': false,
                'margin': false,
                'swap': true,
                'future': true,
                'option': undefined,
                'createStopMarketOrder': true,
            },
            'id': 'binancecoinm',
            'name': 'Binance COIN-M',
            'options': {
                'defaultSubType': 'inverse',
                'fetchMarkets': ['inverse'],
                'leverageBrackets': undefined,
            },
            'urls': {
                'logo': 'https://github.com/user-attachments/assets/387cfc4e-5f33-48cd-8f5c-cd4854dabf0c',
                'doc': [
                    'https://binance-docs.github.io/apidocs/delivery/en/',
                    'https://binance-docs.github.io/apidocs/spot/en',
                    'https://developers.binance.com/en',
                ],
            },
        });
    }
    async transferIn(code, amount, params = {}) {
        // transfer from spot wallet to coinm futures wallet
        return await this.futuresTransfer(code, amount, 3, params);
    }
    async transferOut(code, amount, params = {}) {
        // transfer from coinm futures wallet to spot wallet
        return await this.futuresTransfer(code, amount, 4, params);
    }
}
