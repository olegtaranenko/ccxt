{
  "name": "ccxt",
  "version": "4.2.49",
  "description": "A JavaScript / TypeScript / Python / C# / PHP cryptocurrency trading library with support for 100+ exchanges",
  "unpkg": "dist/ccxt.browser.js",
  "type": "module",
  "exports": {
    ".": {
      "import": "./js/ccxt.js",
      "require": "./dist/ccxt.cjs"
    }
  },
  "engines": {
    "node": ">=15.0.0"
  },
  "publishConfig": {
    "registry": "https://registry.npmjs.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/ccxt/ccxt.git"
  },
  "readme": "README.md",
  "scripts": {
    "build": "npm run pre-transpile && npm run transpile && npm run post-transpile && npm run update-badges && npm run build-docs",
    "build-docs": "node jsdoc2md.js && node examples2md.js",
    "buildCS": "dotnet build cs/ccxt.sln",
    "buildCSRelease": "dotnet build cs --configuration Release",
    "bundle": "npm run bundle-cjs && npm run bundle-browser",
    "bundle-browser": "webpack build -c webpack.config.js && webpack build -c webpack.config.js --optimization-minimize --output-filename ccxt.browser.min.js",
    "bundle-cjs": "rollup -c rollup.config.js",
    "capabilities": "node ./examples/js/exchange-capabilities.js",
    "check-js-syntax": "node -e \"console.log(process.cwd())\" && eslint --version && npm run lint",
    "check-php-syntax": "npm run check-rest-php-syntax && npm run check-ws-php-syntax",
    "check-python-syntax": "cd python && tox -e qa && cd ..",
    "check-python-types": "cd python && tox -e type && cd ..",
    "check-rest-php-syntax": "php -f php/test/custom/syntax.php",
    "check-syntax": "npm run transpile && npm run check-js-syntax && npm run check-python-syntax && npm run check-php-syntax",
    "check-ws-php-syntax": "php -f php/pro/test/custom/syntax.php",
    "cli.cs": "dotnet run --project \"./cs/cli/cli.csproj\"",
    "cli.js": "node ./examples/js/cli.js",
    "cli.php": "php ./examples/php/cli.php",
    "cli.py": "python3 ./examples/py/cli.py",
    "cli.ts": "node --loader ts-node/esm examples/ts/cli.ts",
    "commonjs-test": "node test-commonjs.cjs",
    "copy-python-files": "npm run copy-python-package && npm run copy-python-license && npm run copy-python-keys && npm run copy-python-readme",
    "copy-python-keys": "node build/copy keys.json python/keys.json",
    "copy-python-license": "node build/copy LICENSE.txt python/LICENSE.txt",
    "copy-python-package": "node build/copy package.json python/package.json",
    "copy-python-readme": "node build/copy README.md python/README.md",
    "coverage-js": "npm run instrument && npm run nyc-coverage && rm -rf jsInstrumented",
    "csharp": "npm run transpileCS && npm run transpileCSWs && npm run buildCS",
    "dev-force-transpile": "npm run fast-force-transpileRest && npm run fast-force-transpileWs",
    "docker": "docker-compose run --rm ccxt",
    "emitAPI": "node build/generateImplicitAPI.js",
    "eslint": "eslint",
    "export-exchanges": "node build/export-exchanges",
    "fast-force-transpileRest": "node build/transpile.js --multiprocess",
    "fast-force-transpileWs": "node build/transpileWS.js --multiprocess",
    "fast-test": "npm run commonjs-test && node run-tests --js --useProxy",
    "fast-test-ws": "node run-tests --ws --js",
    "fixTSBug": "node build/fixTSBug",
    "force-build": "npm run pre-transpile && npm run force-transpile-fast && npm run csharp && npm run post-transpile && npm run update-badges",
    "force-build-slow": "npm run pre-transpile && npm run force-transpile && npm run post-transpile && npm run update-badges",
    "force-transpile": "npm run force-transpileRest && npm run force-transpileWs",
    "force-transpile-fast": "npm run dev-force-transpile",
    "force-transpileRest": "node build/transpile --force",
    "force-transpileWs": "node build/transpileWS --force",
    "git-ignore-generated-files": "node build/git-ignore-generated-files.cjs",
    "git-unignore-generated-files": "node build/git-ignore-generated-files.cjs --unignore",
    "id-tests": "npm run id-tests-js && npm run id-tests-py && npm run id-tests-php && npm run id-tests-cs",
    "id-tests-cs": "dotnet run --project cs/tests/tests.csproj --idTests",
    "id-tests-js": "node js/src/test/test.js --idTests",
    "id-tests-php": "php php/test/test_async.php --idTests",
    "id-tests-py": "python python/ccxt/test/test_async.py --idTests",
    "instrument": "nyc instrument js/ jsInstrumented/",
    "lint": "eslint \"ts/src/*.ts\" \"ts/src/base/Exchange.ts\" \"ts/src/pro/*.ts\" --cache --cache-location .cache/eslintcache --cache-strategy metadata",
    "nyc-coverage": "nyc --reporter=html --reporter=lcov --exclude='js/src/pro/**' --exclude='js/src/base/**' --exclude='js/src/test/**' --exclude='js/src/abstract/**' --exclude='js/src/static_dependencies' node jsInstrumented/src/test/test.js --requestTests --responseTests",
    "post-transpile": "npm run check-python-syntax && npm run check-php-syntax",
    "postinstall": "node postinstall.js",
    "pre-transpile": "npm run export-exchanges && npm run vss && npm run tsBuild && npm run emitAPI && npm run validate-types && npm run tsBuildExamples && npm run copy-python-files && npm run check-js-syntax && npm run bundle",
    "pre-transpile-pr": "npm run export-exchanges && npm run tsBuild && npm run emitAPI && npm run check-js-syntax",
    "request-cs": "dotnet run --project cs/tests/tests.csproj --requestTests",
    "request-js": "node js/src/test/test.js --requestTests",
    "request-php": "php php/test/test_async.php --requestTests",
    "request-py": "python3 python/ccxt/test/test_async.py --requestTests",
    "request-tests": "npm run request-js && npm run request-py && npm run request-php && npm run request-cs",
    "response-cs": "dotnet run --project cs/tests/tests.csproj --responseTests",
    "response-js": "node js/src/test/test.js --responseTests",
    "response-php": "php php/test/test_async.php --responseTests",
    "response-py": "python3 python/ccxt/test/test_async.py --responseTests",
    "response-tests": "npm run response-js && npm run response-py && npm run response-php && npm run response-cs",
    "serve-docs": "docsify serve ./wiki",
    "static-tests": "npm run request-tests && npm run response-tests",
    "test": "npm run build && npm run commonjs-test && npm run static-tests && node run-tests --useProxy",
    "test-base": "npm run test-js-base && npm run test-python-base && npm run test-php-base && npm run test-cs-base && npm run id-tests && npm run static-tests",
    "test-base-ws": "npm run test-js-base-ws && npm run test-python-base-ws && npm run test-php-base-ws && npm run test-cs-base-ws",
    "test-cs-base": "dotnet run --project cs/tests/tests.csproj --base",
    "test-cs-base-ws": "dotnet run --project cs/tests/tests.csproj --cache && dotnet run --project cs/tests/tests.csproj --orderbook",
    "test-cs-cache": "dotnet run --project cs/tests/tests.csproj --cache",
    "test-cs-orderbook": "dotnet run --project cs/tests/tests.csproj --orderbook",
    "test-csharp": "npm run commonjs-test && node run-tests --csharp --useProxy",
    "test-csharp-ws": "node run-tests --ws --csharp --useProxy",
    "test-js": "npm run commonjs-test && node run-tests --js --useProxy",
    "test-js-base": "node ./js/src/test/base/test.base.js",
    "test-js-base-ws": "npm run test-js-cache && npm run test-js-orderbook",
    "test-js-cache": "node js/src/pro/test/base/test.Cache.js",
    "test-js-orderbook": "node js/src/pro/test/base/test.OrderBook.js",
    "test-js-ws": "node run-tests --ws --js --useProxy",
    "test-php": "node run-tests --php --useProxy",
    "test-php-base": "php -f php/test/base/test_number.php && php -f php/test/base/test_crypto.php",
    "test-php-base-ws": "npm run test-php-cache && npm run test-php-orderbook",
    "test-php-cache": "php -f php/pro/test/base/test_cache.php",
    "test-php-orderbook": "php -f php/pro/test/base/test_order_book.php",
    "test-php-ws": "node run-tests --ws --php --useProxy",
    "test-py": "node run-tests --python --useProxy",
    "test-py-ws": "node run-tests --ws --python --useProxy",
    "test-python-base": "python3 python/ccxt/test/base/test_number.py && python3 python/ccxt/test/base/test_crypto.py",
    "test-python-base-ws": "npm run test-python-cache && npm run test-python-orderbook",
    "test-python-cache": "python python/ccxt/pro/test/base/test_cache.py",
    "test-python-orderbook": "python python/ccxt/pro/test/base/test_order_book.py",
    "test-ws": "npm run build && node run-tests --ws --useProxy",
    "test-ws-cs-base": "npm run test-cs-cache && npm run test-cs-orderbook",
    "test-ws-php-base": "npm run test-php-cache && npm run test-php-orderbook",
    "transpile": "npm run transpileRest && npm run transpileWs",
    "transpileCS": "node --no-warnings --loader ts-node/esm build/csharpTranspiler.ts --multi",
    "transpileCSWs": "node --no-warnings --loader ts-node/esm build/csharpTranspiler.ts --ws",
    "transpileRest": "node build/transpile",
    "transpileWs": "node build/transpileWS",
    "tsBuild": "tsc || true",
    "tsBuildExamples": "tsc -p ./examples/tsconfig.json",
    "update-badges": "node build/update-badges",
    "update-links": "node build/update-links",
    "validate-types": "node --loader ts-node/esm build/validate-types.ts",
    "vss": "node build/vss"
  },
  "types": "./js/ccxt.d.ts",
  "devDependencies": {
    "@rollup/plugin-commonjs": "^21.0.3",
    "@rollup/plugin-json": "^4.1.0",
    "@rollup/plugin-node-resolve": "^15.2.3",
    "@types/node": "^18.15.11",
    "@typescript-eslint/eslint-plugin": "^5.30.5",
    "@typescript-eslint/parser": "^5.30.5",
    "ansicolor": "1.1.81",
    "as-table": "1.0.37",
    "asciichart": "^1.5.25",
    "assert": "^2.0.0",
    "ast-transpiler": "^0.0.43",
    "docsify": "^4.11.4",
    "eslint": "8.22.0",
    "eslint-config-airbnb-base": "15.0.0",
    "eslint-plugin-import": "2.25.4",
    "eslint-plugin-jsdoc": "^46.9.0",
    "esmify": "^2.1.1",
    "https-proxy-agent": "^5.0.1",
    "jsdoc-to-markdown": "^8.0.0",
    "ololog": "1.1.155",
    "piscina": "^3.2.0",
    "replace-in-file": "^6.3.5",
    "rollup": "^2.70.1",
    "rollup-plugin-execute": "1.1.1",
    "terser-webpack-plugin": "^5.3.9",
    "ts-loader": "^9.4.2",
    "ts-node": "^10.9.1",
    "typescript": "4.7.4",
    "webpack": "^5.76.2",
    "webpack-cli": "^5.0.1"
  },
  "author": {
    "name": "Igor Kroitor",
    "email": "igor.kroitor@gmail.com",
    "url": "https://github.com/kroitor"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/ccxt/ccxt/issues"
  },
  "homepage": "https://ccxt.com",
  "keywords": [
    "algorithmic",
    "algotrading",
    "altcoin",
    "altcoins",
    "api",
    "arbitrage",
    "real-time",
    "realtime",
    "backtest",
    "backtesting",
    "bitcoin",
    "bot",
    "btc",
    "cny",
    "coin",
    "coins",
    "crypto",
    "cryptocurrency",
    "crypto currency",
    "crypto market",
    "currency",
    "currencies",
    "darkcoin",
    "dash",
    "digital currency",
    "doge",
    "dogecoin",
    "e-commerce",
    "etc",
    "eth",
    "ether",
    "ethereum",
    "exchange",
    "exchanges",
    "eur",
    "framework",
    "invest",
    "investing",
    "investor",
    "library",
    "light",
    "litecoin",
    "ltc",
    "market",
    "market data",
    "markets",
    "merchandise",
    "merchant",
    "minimal",
    "ohlcv",
    "order",
    "orderbook",
    "order book",
    "price",
    "price data",
    "pricefeed",
    "private",
    "public",
    "ripple",
    "strategy",
    "ticker",
    "tickers",
    "toolkit",
    "trade",
    "trader",
    "trading",
    "usd",
    "volume",
    "websocket",
    "websockets",
    "web socket",
    "web sockets",
    "ws",
    "xbt",
    "xrp",
    "zec",
    "zerocoin"
  ],
  "collective": {
    "type": "opencollective",
    "url": "https://opencollective.com/ccxt",
    "logo": "https://opencollective.com/ccxt/logo.txt"
  },
  "ethereum": "0x26a3CB49578F07000575405a57888681249c35Fd",
  "dependencies": {
    "ws": "^8.8.1"
  }
}
